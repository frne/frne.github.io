<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Akka on Franks.codes</title>
    <link>https://www.franks.codes/tags/akka/</link>
    <description>Recent content in Akka on Franks.codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 May 2016 23:11:01 +0200</lastBuildDate>
    
	<atom:link href="https://www.franks.codes/tags/akka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Play Framework Actor Pooling with Guice (Java)</title>
      <link>https://www.franks.codes/post/2016-05-02-play-guice-actor-pooling/</link>
      <pubDate>Mon, 02 May 2016 23:11:01 +0200</pubDate>
      
      <guid>https://www.franks.codes/post/2016-05-02-play-guice-actor-pooling/</guid>
      <description>Working with the Play! Framework means working with Akka, intentionally or not. But working with Akka Actors can be tricky, especially when it comes to dependency injection. Play! 2.4 uses Google&amp;rsquo;s Guice for DI and of course it has the ability to also bind Actors so an ActorRef can be injected anywhere.
Single Actor DI Biding and injecting one single Actor is simple and well documented . Just bind it in a Module:</description>
    </item>
    
  </channel>
</rss>