<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compiler on FrankNeff.com - Technology meets Leadership</title>
    <link>https://www.frankneff.com/tags/compiler/</link>
    <description>Recent content in Compiler on FrankNeff.com - Technology meets Leadership</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Mar 2024 12:25:00 +0200</lastBuildDate>
    <atom:link href="https://www.frankneff.com/tags/compiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How a Strong Type System Saves You Documentation, Tests, and Nerves</title>
      <link>https://www.frankneff.com/blog/2024-03-28-how-a-strong-type-system-saves-you-documentation-tests-and-nerves/</link>
      <pubDate>Thu, 28 Mar 2024 12:25:00 +0200</pubDate>
      <guid>https://www.frankneff.com/blog/2024-03-28-how-a-strong-type-system-saves-you-documentation-tests-and-nerves/</guid>
      <description>&lt;p&gt;I was recently inspired to finally write this post. Especially in &lt;strong&gt;weakly- or untyped&lt;/strong&gt; languages, such as&#xA;the JavaScript or PHP world, the added value of strict type systems is often not recognized. Instead, many discussions&#xA;and comments revolve around the &lt;strong&gt;need for tests&lt;/strong&gt; or code comments. Contrary to that, in the functional programming&#xA;world, we &lt;strong&gt;leave such checks to the compiler&lt;/strong&gt;. In this post I would like to give a short overview and&#xA;explain how to use a strict type system for everyday checks instead of writing type checks, tests and documentation for it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scala Compiler Tuning</title>
      <link>https://www.frankneff.com/blog/2016-04-15-scala-compiler-tuning/</link>
      <pubDate>Fri, 15 Apr 2016 22:15:28 +0200</pubDate>
      <guid>https://www.frankneff.com/blog/2016-04-15-scala-compiler-tuning/</guid>
      <description>&lt;p&gt;As my Scala projects go on, I want to share some compiler configuration and tricks with you, which I use on many&#xA;projects. Some tiny configuration options can greatly improve your code and warn you about things, you would probably&#xA;never discover.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
