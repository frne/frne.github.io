<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visualization on FrankNeff.com - Technology meets Leadership</title>
    <link>https://www.frankneff.com/tags/visualization/</link>
    <description>Recent content in visualization on FrankNeff.com - Technology meets Leadership</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 13 Oct 2023 14:25:00 +0200</lastBuildDate><atom:link href="https://www.frankneff.com/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to effectively visualize an Application Landscape in Enterprise Architecture</title>
      <link>https://www.frankneff.com/blog/2023-10-14-how-to-effectively-visualize-application-landscape-enterprise-architecture/</link>
      <pubDate>Fri, 13 Oct 2023 14:25:00 +0200</pubDate>
      
      <guid>https://www.frankneff.com/blog/2023-10-14-how-to-effectively-visualize-application-landscape-enterprise-architecture/</guid>
      <description>&lt;p&gt;In enterprise &amp;amp; solution architecture, &lt;strong&gt;connecting boxes with arrows&lt;/strong&gt; is an often used and overrated visualization
from high-level, thru component architecture, down to data and class diagrams. However, to create a &lt;strong&gt;holistic view&lt;/strong&gt; on
systems, component diagrams are not enough! When it comes to analysis or transformation of a high-level application- or
&lt;strong&gt;service-architecture&lt;/strong&gt;, I prefer to draw an &lt;strong&gt;Application Landscape Diagram&lt;/strong&gt;, which I would like to show and elaborate
on in this post.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
