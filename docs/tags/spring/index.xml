<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on FrankNeff.com - Technology meets Leadership</title>
    <link>https://www.frankneff.com/tags/spring/</link>
    <description>Recent content in spring on FrankNeff.com - Technology meets Leadership</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Feb 2022 07:10:00 +0100</lastBuildDate><atom:link href="https://www.frankneff.com/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why you probably don&#39;t need Spring Cloud Config</title>
      <link>https://www.frankneff.com/blog/2022-02-25-why-you-dont-need-spring-cloud-config/</link>
      <pubDate>Fri, 25 Feb 2022 07:10:00 +0100</pubDate>
      
      <guid>https://www.frankneff.com/blog/2022-02-25-why-you-dont-need-spring-cloud-config/</guid>
      <description>&lt;p&gt;Spring cloud config is a configuration management solution and part of the Spring ecosystem. It&amp;rsquo;s easy to integrate and
use, but it has severe downsides from an architectural perspective. Also, I have seen many projects where
it was added just because &amp;ldquo;it is a thing&amp;rdquo; and even more often, it was used to solve or work around problems in the
software architecture or deployment for which it doesn&amp;rsquo;t provide a real solution. In this blog post, I&amp;rsquo;ll point out some
conceptional issues and downsides of that project I have seen so far.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Spring Security Oauth2 Blues - Simplicity</title>
      <link>https://www.frankneff.com/blog/2019-11-19-spring-security-oauth-blues-simplicity/</link>
      <pubDate>Sat, 14 Dec 2019 13:58:28 +0100</pubDate>
      
      <guid>https://www.frankneff.com/blog/2019-11-19-spring-security-oauth-blues-simplicity/</guid>
      <description>&lt;p&gt;I personally like the Spring Framework and its security components, because it&amp;rsquo;s pretty full-featured and easy to use,
but when it comes to Spring Security OAuth2, there&amp;rsquo;s a huge quality breakdown. In this (probably series) of blogposts,
I&amp;rsquo;ll try to sum up the good, the bad, the evil and why I ended up completely dropping Spring Security OAuth2.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
