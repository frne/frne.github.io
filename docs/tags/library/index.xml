<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>library on FrankNeff.com - Technology meets Business</title>
    <link>https://www.frankneff.com/tags/library/</link>
    <description>Recent content in library on FrankNeff.com - Technology meets Business</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 26 Feb 2020 17:05:18 +0100</lastBuildDate><atom:link href="https://www.frankneff.com/tags/library/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crossbuilding Scala.js 1.0 and 0.6</title>
      <link>https://www.frankneff.com/blog/2020-02-26-crossbuilding-scalajs-1-0-and-0-6/</link>
      <pubDate>Wed, 26 Feb 2020 17:05:18 +0100</pubDate>
      
      <guid>https://www.frankneff.com/blog/2020-02-26-crossbuilding-scalajs-1-0-and-0-6/</guid>
      <description>&lt;p&gt;As you may know, Scala.js &lt;code&gt;1.0.0&lt;/code&gt; &lt;a href=&#34;https://www.scala-js.org/news/2020/02/25/announcing-scalajs-1.0.0/&#34;&gt;just went final&lt;/a&gt;.
For end-products, the upgrade is rather simple, just bump the plugin version and fix potential compile issues. If
you&amp;rsquo;re maintaining a library, cross-building for &lt;code&gt;0.6.x&lt;/code&gt; and &lt;code&gt;1.0.x&lt;/code&gt; is still a bit tricky, but possible&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Functional Java 1 - Options</title>
      <link>https://www.frankneff.com/blog/2016-11-22-functional-java-1-option/</link>
      <pubDate>Tue, 22 Nov 2016 08:22:49 +0100</pubDate>
      
      <guid>https://www.frankneff.com/blog/2016-11-22-functional-java-1-option/</guid>
      <description>&lt;p&gt;This is the first post of my series about functional programming in Java. There&amp;rsquo;s a lot of functional stuff one can do. Everyone knows the Java 8 Lambda expression, but with a little library support, there is way more&amp;hellip; In this series, I&amp;rsquo;ll coder som libraries which provide functional paradigms and constructs for Java:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
