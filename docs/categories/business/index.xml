<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Business on FrankNeff.com - Technology meets Leadership</title>
    <link>https://www.frankneff.com/categories/business/</link>
    <description>Recent content in Business on FrankNeff.com - Technology meets Leadership</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Aug 2021 18:30:00 +0100</lastBuildDate><atom:link href="https://www.frankneff.com/categories/business/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why complexity in software projects is bad (and you should not advertise it)</title>
      <link>https://www.frankneff.com/blog/2021-08-10-why-complexity-in-software-is-bad/</link>
      <pubDate>Tue, 10 Aug 2021 18:30:00 +0100</pubDate>
      
      <guid>https://www.frankneff.com/blog/2021-08-10-why-complexity-in-software-is-bad/</guid>
      <description>&lt;p&gt;There are (still) many people telling proudly, how complex their product is. There are job ads, explaining that you will
&amp;ldquo;create highly complex software&amp;rdquo;. These false signals, which I personally saw in many positions and projects, create a
potentially huge long-tail problem, not primarily for engineers, but for the product management and engineering team
lead. In this blogpost, I want to point out some of those impacts of advertising complexity&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>If pragmatism raises technical debt, call it oversimplification (rant)</title>
      <link>https://www.frankneff.com/blog/2015-04-21-pragmatism-technical-dept-oversimplification/</link>
      <pubDate>Tue, 21 Apr 2015 13:09:32 +0200</pubDate>
      
      <guid>https://www.frankneff.com/blog/2015-04-21-pragmatism-technical-dept-oversimplification/</guid>
      <description>&lt;p&gt;The word &amp;ldquo;pragmatism&amp;rdquo; or &amp;ldquo;pragmatic&amp;rdquo; is, in my personal opinion, the most
overrated word in agile development. Many people use this as a buzzword without
knowing what it means. I hear people saying &amp;ldquo;He solved that complex problem in
half an hour, he&amp;rsquo;s so pragmatic!&amp;rdquo; and think for myself &amp;ldquo;Yeah, but that &amp;lsquo;solution&amp;rsquo;
probably causes other devs three times more effort than a sustainable solution
would take.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
